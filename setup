#!/bin/bash

source /var/lib/dvswitch/dvs/var.txt

user_array=(01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40)

#====== installation_apps =============================================
function installation_apps() {

sudo apt update -y && sudo apt upgrade -y
cd /tmp
wget http://dvswitch.org/buster
sudo chmod +x buster
sudo ./buster
sudo apt-get update -y
sudo apt-get install dvswitch-server -y

sudo apt-get install multitail -y

sudo apt install htop -y
}


#====== set_path =============================================
function set_path() {

file="/etc/profile"

# 추가할 디렉토리 목록
read -r -d '' new_dirs << 'EOF'
/opt/MMDVM_Bridge
/usr/local/dvs
EOF

# 1. 기존 PATH 라인들 모두 추출
existing_path_lines=$(grep -n '^export PATH=' "$file" | cut -d: -f1)

# 2. 기존 경로 모으기
existing_paths=""
for line_no in $existing_path_lines; do
    line=$(sed -n "${line_no}p" "$file")
    # $PATH:$dir1:$dir2 형식에서 실제 경로만 추출
    paths=$(echo "$line" | sed -E 's/^export PATH=\$PATH:?//; s/["]//g' | tr ':' '\n')
    for path in $paths; do
        existing_paths="$existing_paths"$'\n'"$path"
    done
done

# 3. 새로 추가할 디렉토리와 기존 경로들을 하나로 정리
all_paths="$existing_paths"
for dir in $new_dirs; do
    all_paths="$all_paths"$'\n'"$dir"
done

# 4. 중복 제거 + 다시 PATH 라인으로 조립
unique_paths=$(echo "$all_paths" | grep -v '^$' | sort -u | tr '\n' ':' | sed 's/:$//')
new_export_line="export PATH=\$PATH:$unique_paths"

# 5. 기존 PATH 라인 모두 삭제
if [ -n "$existing_path_lines" ]; then
    sudo sed -i '/^export PATH=/d' "$file"
fi

# 6. 새 export PATH 줄 추가
echo "$new_export_line" | sudo tee -a "$file" > /dev/null
}

#====== set_alias =============================================
function set_alias() {

BASHRC="/etc/bash.bashrc"

# 추가할 alias 목록
read -r -d '' ALIASES << 'EOF'
alias dv="cd /usr/local/dvs"
alias data="cd /var/lib/dvswitch/dvs"
alias adv="cd /var/lib/dvswitch/dvs/adv"
alias user="cd /var/lib/dvswitch/dvs/adv"
alias lan="cd /var/lib/dvswitch/dvs/lan"
alias tgdb="cd /var/lib/dvswitch/dvs/tgdb"
alias ab="cd /opt/Analog_Bridge"
alias mb="cd /opt/MMDVM_Bridge"
alias ar="cd /opt/Analog_Reflector"
alias log="cd /var/log/dvswitch"
EOF

# 하나씩 확인하며, 기존에 없는 alias만 추가

while read -r line; do
    if ! grep -Fxq "$line" "$BASHRC"; then
        echo "$line" | sudo tee -a "$BASHRC" > /dev/null
    fi
done <<< "$ALIASES"
}

#====== copy_files_for_userXX =============================================
function copy_files_for_userXX() {

files="analog_bridge00.service md380-emu00.service mmdvm_bridge00.service var00.txt"

dir=/var/lib/dvswitch/dvs
for file in $files; do
sudo wget -O ${dir}/$file https://raw.githubusercontent.com/hl5btf/DVSMU/main/$file
sudo chmod +x ${dir}/$file
done


sudo mkdir /var/lib/dvswitch/dvs/adv/user00
files="dvsm.adv dvsm.basic dvsm.macro dvsm.sh"

dir=/var/lib/dvswitch/dvs/adv/user00
for file in $files; do
sudo wget -O ${dir}/$file https://raw.githubusercontent.com/hl5btf/DVSMU/main/$file
sudo chmod +x ${dir}/$file
done


sudo mkdir /var/lib/dvswitch/dvs/adv/user00EN
sudo mkdir /var/lib/dvswitch/dvs/adv/user00KR

files="adv_audio.txt adv_dmr.txt adv_hotspot.txt adv_main.txt adv_managetg.txt adv_resetfvrt.txt adv_rxgain.txt adv_tgref.txt adv_tools.txt adv_txgain.txt"

for file in $files; do
sudo wget -O /var/lib/dvswitch/dvs/adv/user00EN/$file https://raw.githubusercontent.com/hl5btf/DVSMU/main/EN/$file
sudo wget -O /var/lib/dvswitch/dvs/adv/user00KR/$file https://raw.githubusercontent.com/hl5btf/DVSMU/main/KR/$file
done
}

#====== change_freq_of_all_users =============================================
function change_freq_of_all_users() {

# 주파수가 00000 일 경우에만, 430으로 수정

source /var/lib/dvswitch/dvs/var.txt > /dev/null 2>&1
    file=/var/lib/dvswitch/dvs/var.txt
    tag=rx_freq; value=430000000
    sudo sed -i -e "/^$tag=/ c $tag=$value" $file
    tag=tx_freq; value=430000000
    sudo sed -i -e "/^$tag=/ c $tag=$value" $file

source /var/lib/dvswitch/dvs/var00.txt > /dev/null 2>&1
    file=/var/lib/dvswitch/dvs/var00.txt
    tag=rx_freq; value=430000000
    sudo sed -i -e "/^$tag=/ c $tag=$value" $file
    tag=tx_freq; value=430000000
    sudo sed -i -e "/^$tag=/ c $tag=$value" $file

source /opt/MMDVM_Bridge/MMDVM_Bridge.ini > /dev/null 2>&1
    update_ini="sudo /opt/MMDVM_Bridge/dvswitch.sh updateINIFileValue"
        file=/opt/MMDVM_Bridge/MMDVM_Bridge.ini
        section=Info; tag=RXFrequency; value=430000000
        $update_ini $file $section $tag $value
        section=Info; tag=TXFrequency; value=430000000
        $update_ini $file $section $tag $value

for user in "${user_array[@]}"; do
if [ -e /var/lib/dvswitch/dvs/var${user}.txt ] && [ x${call_sign} != x ]; then
    source /var/lib/dvswitch/dvs/var${user}.txt > /dev/null 2>&1
    update_ini="sudo /opt/user${user}/dvswitch.sh updateINIFileValue"    
        file=/var/lib/dvswitch/dvs/var${user}.txt
        tag=rx_freq; value=430000000
        sudo sed -i -e "/^$tag=/ c $tag=$value" $file
        tag=tx_freq; value=430000000
        sudo sed -i -e "/^$tag=/ c $tag=$value" $file

    source /opt/user${user}/MMDVM_Bridge.ini > /dev/null 2>&1
        file=/opt/user${user}/MMDVM_Bridge.ini
        section=Info; tag=RXFrequency; value=430000000
        $update_ini $file $section $tag $value
        section=Info; tag=TXFrequency; value=430000000
        $update_ini $file $section $tag $value
fi
done
}

#====== download_and_update_apps =============================================
function download_and_update_apps() {

files="dvsmu man_log DMRIds_chk.sh bm_watchdog.sh config_main_user.sh"

for file in $files; do
sudo wget -O /usr/local/dvs/$file https://raw.githubusercontent.com/hl5btf/DVSMU/main/$file
sudo chmod +x /usr/local/dvs/$file
done

# 필요시 아래와 같이 다운로드 가능
# sudo wget -O /usr/local/dvs/dvsmu https://raw.githubusercontent.com/hl5btf/DVSMU/main/dvsmu
# sudo wget -O /usr/local/dvs/man_log https://raw.githubusercontent.com/hl5btf/DVSMU/main/man_log
# sudo wget -O /usr/local/dvs/DMRIds_chk.sh https://raw.githubusercontent.com/hl5btf/DVSMU/main/DMRIds_chk.sh
}


#====== set_crontab =============================================
function set_crontab() {

FILE_CRON=/etc/crontab

if ! sudo grep -q "time=" "$FILE_CRON"; then
    echo "#time=3" | sudo tee -a $FILE_CRON
fi

if ! sudo grep -q "reboot=" "$FILE_CRON"; then
    echo "#reboot=yes" | sudo tee -a $FILE_CRON
fi

if ! sudo grep -q "man_log" "$FILE_CRON"; then
    echo "0 3 * * * root /usr/local/dvs/man_log" | sudo tee -a $FILE_CRON
fi

if ! sudo grep -q "DMRIds" "$FILE_CRON"; then
    echo "28 6 * * * root /usr/local/dvs/DMRIds_chk.sh" | sudo tee -a $FILE_CRON
fi

if ! sudo grep -q "bm_watchdog" "$FILE_CRON"; then
    echo "*/5 * * * * root /usr/local/dvs/bm_watchdog.sh" | sudo tee -a $FILE_CRON
fi
}

#====== add_variables =============================================
function add_variables() {
#sudo wget -O /var/lib/dvswitch/dvs/var00.txt https://raw.githubusercontent.com/hl5btf/DVSMU/main/var00.txt
# 기존에 있는 변수는 값을 변경하지 않는다. (사용자가 변경한 값을 유지하도록)
# 기존에 있는 변수의 값을 변경하려면 update_var 을 사용해야 한다.
# each item needs space in between. if the item is character, it needs quotation marks.

new_var="txgain_asl txgain_stfu txgain_intercom original_bm_address"

new_val=(0.35 0.35 0.35 "")

function do_add() {
for var in ${new_var}; do
    if ! sudo grep -q "^$var" "$file"; then        
                echo "$var=" | sudo tee -a $file
                val=${new_val[$n]}
                sudo sed -i -e "/^$var=/ c $var=$val" $file
    fi
        n=$(($n+1))
done
}

file=/var/lib/dvswitch/dvs/var.txt
    do_add; n=0

file=/var/lib/dvswitch/dvs/var00.txt
    do_add; n=0

for user in "${user_array[@]}"; do
if [ -e /var/lib/dvswitch/dvs/var${user}.txt ] && [ x${call_sign} != x ]; then
    source /var/lib/dvswitch/dvs/var${user}.txt
    file=/var/lib/dvswitch/dvs/var${user}.txt
    do_add; n=0
fi
done
}

#=======================
# MAIN SCRIPT
#=======================
(
installation_apps
set_path
set_alias
copy_files_for_userXX

# 아래 3개는 Github hl5btf/DVSMU/upgrade.sh와 동일 (수정시 동일하게 수정해야 함)
replace_freq_of_all_users
download_and_update_apps
set_crontab
add_variables
) > /dev/null 2>&1 &

echo -n "약 5분 소요됨. 완료되면 자동 리부팅됨. "
while kill -0 $! 2>/dev/null; do
    echo -n "."
    sleep 1
done
echo
echo -e "\ndone"
echo
echo "reboot"
echo

sudo rm setup

sudo reboot
exit 0
